---
import StandardLayoutWithSidebar from "../../layouts/standardLayoutWithSidebar.astro";
---

<style>
  h1 {
    font-size: 2rem;
    font-weight: 700;
    margin-bottom: 1rem;
  }
  input {
    padding: 1rem;
    border: 1px solid #ccc;
    border-radius: 4px;
    font-size: 1rem;
    margin-bottom: 1rem;
  }
  button {
    padding: 1rem;
    border: 1px solid #ccc;
    border-radius: 4px;
    font-size: 1rem;
    margin-bottom: 1rem;
    cursor: pointer;
  }
  button:hover {
    background-color: #a98484;
  }
</style>


<script>
import { statsStore } from "../../stores/stats";
  import type { stats } from "../../stores/stats";
  import Chart from "chart.js/auto";


  function addData(chart: Chart, label: any, data: any[]) {
    if (data.length > 10) {
        data.shift();
      }
    if (!chart || !label || !data) {
      console.log("missing data");
      return;
    }
    if (!chart.data.labels || !chart.data.datasets) {
      console.log("missing from chart");
      return;
    }
    chart.data.labels.push(label);
    chart.data.datasets.forEach((dataset: any) => {
      if (!dataset.data) {
        console.log("missing data from dataset");
        return;
      }
      if (dataset.data.length > 10) {
        dataset.data.shift();
      }
      dataset.data.push(data);
    });
    if (chart.data.labels.length > 10) {
      chart.data.labels.shift();
    }

    chart.update();
  }


   




  class MemoryComponent extends HTMLElement {
    testVar: any[] = []
    fetchInterval: number
    ctx: HTMLCanvasElement;
    testChart: Chart
    
    constructor(){
      super()
      this.attachShadow({mode: "open"})
      this.fetchInterval = 0
      this.ctx = document.createElement("canvas")
      this.ctx.setAttribute("id", "memtotal")
      this.shadowRoot?.append(this.ctx)
      this.testChart = new Chart(this.ctx, {
        type: "line",
        data: {
          datasets: 
              [{
                label: "Memory: Total",
                data: [...this.testVar,],
              }]
        }
      })
    }
    connectedCallback() {
      console.log("Hello")
      this.testChart.render()
      this.fetchInterval = window.setInterval(async () => {
        const res = await fetch("/api/server-stats")
        const json = await res.json()
        console.log(json.memory.total)
        this.testVar.push(json.memory.total)
        addData(this.testChart, new Date().toLocaleTimeString(), this.testVar);
      }, 1000)
    }
    disconnectedCallback() {
      this.testChart.destroy()
      this.ctx.remove()
      console.log("Disconnected")
      window.clearInterval(this.fetchInterval)
    }
    

  }
  customElements.define("memory-component", MemoryComponent)

</script>

<StandardLayoutWithSidebar title="Dashboard">
  <h1>Dashboard</h1>
  <memory-component></memory-component>
</StandardLayoutWithSidebar>